import os

from tqdm import tqdm
import learning
import simulator as sim
import basic_strategy as bs
import common
from collections import defaultdict
import itertools
from pprint import pprint
import matplotlib.pyplot as plt
import numpy as np
from scipy.stats import gmean
import pickle
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Ridge
import multiprocessing as mp

normalized_dict = {
 -20.0: -0.24743267959366266,
 -19.5: 0,
 -19.0: -0.20562645011600927,
 -18.5: 0,
 -18.0: -0.21975752731148415,
 -17.5: -0.1890595009596929,
 -17.0: -0.17250647725470153,
 -16.5: -0.16482194417709337,
 -16.0: -0.19724960684913934,
 -15.5: -0.15343370499254314,
 -15.0: -0.15804292826246633,
 -14.5: -0.13407468748767695,
 -14.0: -0.16874785129029712,
 -13.5: -0.12259615384615384,
 -13.0: -0.13220292877544543,
 -12.5: -0.11219187921206657,
 -12.0: -0.14136615749156606,
 -11.5: -0.09873405757111017,
 -11.0: -0.10867638812622209,
 -10.5: -0.09311203037384014,
 -10.0: -0.1146843097311979,
 -9.5: -0.07826086245964345,
 -9.0: -0.08361074873734352,
 -8.5: -0.0699550243984495,
 -8.0: -0.08441357858389834,
 -7.5: -0.060681578779665846,
 -7.0: -0.059396859962278,
 -6.5: -0.05091144669162599,
 -6.0: -0.05139007847713671,
 -5.5: -0.04114198377002432,
 -5.0: -0.039277358954912786,
 -4.5: -0.03456201595978023,
 -4.0: -0.030374365508495812,
 -3.5: -0.025991604022420338,
 -3.0: -0.022567512022884914,
 -2.5: -0.0192545733321612,
 -2.0: -0.02054813111920142,
 -1.5: -0.012186027210159866,
 -1.0: -0.008934769426555984,
 -0.5: -0.0063482895927367234,
 0.0: -0.0037431252427780532,
 0.5: -0.00020348297283925149,
 1.0: 0.0032366702020880465,
 1.5: 0.005857227863588765,
 2.0: 0.01715966101747532,
 2.5: 0.012357167479467662,
 3.0: 0.016160191248862244,
 3.5: 0.017754015023334294,
 4.0: 0.032924949878154315,
 4.5: 0.0241110227845658,
 5.0: 0.02848410180768922,
 5.5: 0.028623140308924943,
 6.0: 0.053651900290619614,
 6.5: 0.03516549052171902,
 7.0: 0.040524011181967544,
 7.5: 0.039055688987528384,
 8.0: 0.05590902470317149,
 8.5: 0.04382620923615114,
 9.0: 0.05091420981326516,
 9.5: 0.04876444703591747,
 10.0: 0.06454957439513424,
 10.5: 0.05058953283789817,
 11.0: 0.05938902184509189,
 11.5: 0.054792066538707614,
 12.0: 0.07164906234239626,
 12.5: 0.06324382488814816,
 13.0: 0.06815316704199956,
 13.5: 0.06789500611090583,
 14.0: 0.07596833932425574,
 14.5: 0.0641278854462412,
 15.0: 0.07161822364979271,
 15.5: 0.05897474671102374,
 16.0: 0.08141102791490785,
 16.5: 0.08084063950489943,
 17.0: 0.07501243299994474,
 17.5: 0.02749229188078109,
 18.0: 0.08666764332454341,
 18.5: 0,
 19.0: 0.0866308364124958,
 19.5: 0,
 20.0: 0.09183174122995041,}


only = {-20.0: -62501.0,
 -19.5: -84.0,
 -19.0: -3190.5,
 -18.5: -86.5,
 -18.0: -115465.0,
 -17.5: -394.0,
 -17.0: -9787.5,
 -16.5: -685.0,
 -16.0: -207584.5,
 -15.5: -2160.5,
 -15.0: -29047.5,
 -14.5: -3400.0,
 -14.0: -346533.5,
 -13.5: -9154.5,
 -13.0: -69984.0,
 -12.5: -14683.0,
 -12.0: -559375.0,
 -11.5: -32382.5,
 -11.0: -149620.0,
 -10.5: -52040.5,
 -10.0: -862037.0,
 -9.5: -95774.0,
 -9.0: -279440.5,
 -8.5: -143890.0,
 -8.0: -1190651.5,
 -7.5: -242814.0,
 -7.0: -475748.0,
 -6.5: -343933.5,
 -6.0: -1343996.5,
 -5.5: -492685.5,
 -5.0: -782024.0,
 -4.5: -700800.0,
 -4.0: -1526446.0,
 -3.5: -881327.0,
 -3.0: -1207189.5,
 -2.5: -1091843.0,
 -2.0: -2359635.0,
 -1.5: -1214487.0,
 -1.0: -1357149.0,
 -0.5: -1155968.0,
 0.0: -1067486.5,
 0.5: -35082.0,
 1.0: 470517.0,
 1.5: 556768.5,
 2.0: 1901473.5,
 2.5: 672432.0,
 3.0: 830002.5,
 3.5: 578227.0,
 4.0: 1614393.0,
 4.5: 469185.0,
 5.0: 547201.5,
 5.5: 329253.5,
 6.0: 1376652.5,
 6.5: 227665.5,
 7.0: 314770.5,
 7.5: 149895.5,
 8.0: 774227.0,
 8.5: 86143.0,
 9.0: 165054.5,
 9.5: 57204.5,
 10.0: 476305.5,
 10.5: 26971.0,
 11.0: 79137.0,
 11.5: 17128.0,
 12.0: 277741.5,
 12.5: 7817.0,
 13.0: 34924.0,
 13.5: 4777.5,
 14.0: 152970.0,
 14.5: 1558.5,
 15.0: 12731.5,
 15.5: 780.0,
 16.0: 83741.5,
 16.5: 313.5,
 17.0: 4072.5,
 17.5: 53.5,
 18.0: 44369.5,
 18.5: 1.0,
 19.0: 1289.5,
 19.5: 18.5,
 20.0: 22706.5}

vec = False


fig = plt.figure(figsize=(8,5))
ax = fig.add_subplot(211)
plt.title(f'Reward per Count\nNormalized by # of Occurrences per Count ')
plt.xlabel('Count')
plt.ylabel(r'$\frac{Reward_{i}}{N_{i}}$')
plt.yticks(np.arange(-0.4, 0.5, 0.2))
plt.grid(True)
plt.bar(*zip(*normalized_dict.items()))

plt.subplots_adjust(hspace = 0.5)

fig.add_subplot(212)
plt.bar(*zip(*only.items()))
plt.title("Total Rewards - Count")
plt.xlabel('Count')
plt.ylabel('Rewards')
plt.grid(True)
plt.savefig(f'tmp_{vec}', dpi=500)